import{l as h,aN as b,w as z,aO as E,aI as M,aP as R,af as w,i as S,R as y,aQ as A,aR as O,k as B,aS as C}from"./BbQcBd-9.js";function D(e,n,a){let i;M(a)?i={evaluating:a}:i=a||{};const{lazy:c=!1,evaluating:s=void 0,shallow:v=!0,onError:o=R}=i,t=w(!c),r=v?w(n):S(n);let u=0;return y(async l=>{if(!t.value)return;u++;const f=u;let g=!1;s&&Promise.resolve().then(()=>{s.value=!0});try{const p=await e(_=>{l(()=>{s&&(s.value=!1),g||_()})});f===u&&(r.value=p)}catch(p){o(p)}finally{s&&f===u&&(s.value=!1),g=!0}}),c?h(()=>(t.value=!0,r.value)):r}const I=O?window:void 0;function m(e){var n;const a=b(e);return(n=a==null?void 0:a.$el)!=null?n:a}function P(){const e=w(!1),n=C();return n&&B(()=>{e.value=!0},n),e}function W(e){const n=P();return h(()=>(n.value,!!e()))}function F(e,n,a={}){const{window:i=I,...c}=a;let s;const v=W(()=>i&&"ResizeObserver"in i),o=()=>{s&&(s.disconnect(),s=void 0)},t=h(()=>{const l=b(e);return Array.isArray(l)?l.map(f=>m(f)):[m(l)]}),r=z(t,l=>{if(o(),v.value&&i){s=new ResizeObserver(n);for(const f of l)f&&s.observe(f,c)}},{immediate:!0,flush:"post"}),u=()=>{o(),r()};return E(u),{isSupported:v,stop:u}}const d=new Map;function N(e){const n=A();function a(o){var t;const r=d.get(e)||new Set;r.add(o),d.set(e,r);const u=()=>c(o);return(t=n==null?void 0:n.cleanups)==null||t.push(u),u}function i(o){function t(...r){c(t),o(...r)}return a(t)}function c(o){const t=d.get(e);t&&(t.delete(o),t.size||s())}function s(){d.delete(e)}function v(o,t){var r;(r=d.get(e))==null||r.forEach(u=>u(o,t))}return{on:a,once:i,off:c,emit:v,reset:s}}export{F as a,m as b,D as c,N as u};
